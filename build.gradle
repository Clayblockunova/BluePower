buildscript {
	repositories {
		mavenCentral()
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
		maven {
			name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
	maven { //repo for HWYLA
		url "http://tehnut.info/maven"
	}
    maven { // the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
	maven { //JEI repo
		url = "http://dvs1.progwml6.com/files/maven"
	}
    maven {
        name 'OpenComputers'
        url = "http://maven.cil.li/"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "Qmunity"
        url = "http://maven.bluepowermod.com/"
    }
	maven {
		url "http://maven.amadornes.com/"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

project.ext {
    major = "0"
    minor = "3"
    if (System.getenv().BUILD_NUMBER != null) {
        build = System.getenv().BUILD_NUMBER
    } else {
        build = "-custom"
    }
    mcVersion = "1.11"
}


version = "${project.ext.major}.${project.minor}.${project.build}"
group = "com.bluepowermod"
archivesBaseName = "BluePower"

dependencies {
    compile "li.cil.oc:OpenComputers:MC1.10.2-1.6.1.61-dev:api"
    compile 'net.industrial-craft:industrialcraft-2:2.6.139-ex110:api'
    compile "codechicken:CodeChickenLib:1.11-3.0.0.150:dev"
	deobfCompile "MCMultiPart:MCMultiPart-experimental:2.0.0_88:universal"
    deobfCompile "mcp.mobius.waila:Hwyla:1.8.5-B19_1.11"
	deobfCompile "mezz.jei:jei_1.11:4.1.1.208:api"
	runtime "mezz.jei:jei_1.11:4.1.1.208"
	
    //Qmunity needs to be updated also
	//compile "qmunity:QmunityLib:0.2.116:deobf"
}

minecraft {
    version = "${project.ext.mcVersion}-13.19.1.2199"
    runDir = "eclipse/assets"
	mappings = "snapshot_20161225"

    // replacing stuff in the source
    replace '@MAJOR@', project.major
    replace '@MINOR@', project.minor
    replace '@MC_VERSION@', version
    replace '@BUILD_NUMBER@', project.build

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include '*.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }

            //This makes sure that it gets run EVERY time
            outputs.upToDateWhen {false}
        }


jar {
    appendix = "${project.ext.mcVersion}"
    classifier = "universal"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        appendix = "${project.ext.mcVersion}"
        classifier = "deobf"
    }
}

// Create API library zip
task apiZip(type: Zip) {
    from(sourceSets.main.java) {
        include 'com/bluepowermod/api/**'
        appendix = "${project.ext.mcVersion}"
        classifier = "api"
    }
}

apiZip.mustRunAfter deobfJar

artifacts {
    archives sourceJar
    archives deobfJar
    archives apiZip
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + System.getenv("local_maven"))
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'BluePower'
                    url 'https://github.com/Qmunity/BluePower'
                    scm {
                        url 'https://github.com/Qmunity/BluePower'
                        connection 'scm:git:git@github.com:Qmunity/BluePower.git'
                        developerConnection 'scm:git:git@github.com:Qmunity/BluePower.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/Qmunity/BluePower/issues'
                    }
                    licenses {
                        license {
                            name 'GPLv3'
                            url 'https://github.com/Qmunity/BluePower/blob/master/LICENCE.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'MineMaarten'
                            name 'MineMaarten'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Amadornes'
                            name 'Amadornes'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Quetzi'
                            name 'Quetzi'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'K4Unl'
                            name 'K4Unl'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Zness'
                            name 'Zness'
                            roles { role 'artist' }
                        }
                    }
                }
            }
        }
    }
}
